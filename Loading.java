package resultcalculator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author AD0KW3
 */
import java.sql.*;
import javax.swing.JOptionPane;
import static resultcalculator.MainCal.designation;
//import static resultcalculator.MainCal.dept;

public class Loading extends javax.swing.JFrame implements Runnable {

    Connection conn;
    ResultSet rs;
    PreparedStatement pst;
    int s=0;
    
            
    /**
     * Creates new form Loading
     */
    public Loading() {
        super("Loading");
		new CountDownClock().start();
        initComponents();
	  
    }

	@Override
	public void run() {
		throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
	}
	
interface TimeMonitor {
	int getTime();
}

public class CountDownClock extends Thread implements TimeMonitor{
		private int t; 
		public CountDownClock() {
			this.t = 0;
			}
		
		public void run()
		{
			
			for (; t <= 99; t++) {
				
				try{
					jProgressBar2.setValue(t);
				}catch(Exception e){
					//JOptionPane.showMessageDialog(null, e);
				}
				try{
					Thread.sleep(50);
				}
				catch (InterruptedException e){}
				if(t==97){
					if(designation.equalsIgnoreCase("Admin")){
						new MainCal().setVisible(true);
					}else{
						new score().setVisible(true);
					}
				}else if(t==99){
					try{
						
					setVisible(false);
					dispose();
					
					
					}catch(Exception e){
						//JOptionPane.showMessageDialog(null, e);
					}
				}
				
			}
				
		}
		public int getTime() {
			return t;
		}
	}
	

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar2 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jProgressBar2.setForeground(new java.awt.Color(187, 187, 187));
        jProgressBar2.setNextFocusableComponent(jProgressBar2);
        jProgressBar2.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(399, 19));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loading().setVisible(true);
				//new CountDownClock().start();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jProgressBar2;
    // End of variables declaration//GEN-END:variables
}
